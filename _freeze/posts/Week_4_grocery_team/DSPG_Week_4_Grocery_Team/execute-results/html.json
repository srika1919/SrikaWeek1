{
  "hash": "33ca1b5b3fbc54fa025f40f423fc25a7",
  "result": {
    "markdown": "---\ntitle: \"Week_4_Grocery_Team\"\nauthors: [\"Harun Celik\",\"Aaron Null\",\"Srika Raja\",\"Alexander Cory\"]\ndate: \"2023-06-08\"\ncategories: \"Week_4\"\n---\n\n\n![](images/grocery-01.jpg)\n\n# Project Overview\n\n# Work completed\n\n-   Reviewing the client reports understanding the key aspects of the project\n\n-   Collecting and Evaluating the various possible data sources\n\n    ![](images/Data%20Sources.png)\n\n-   Client meeting to share our insights and get more clarity on their expectations from the project\n\n    -   ![](images/WhatsApp%20Image%202023-06-02%20at%2014.09.29-01.jpg)\n\n        Key insights from the meeting:\n\n        -   We clarified the scope of the project and determined a path for moving forwards.\n\n        -   We learned about existing data sources, such as Bizminer and VerticalIQ, and learned more about the rural grocery business\n\n-   Understanding and documenting the function from the excel\n\n    ![](images/Understanding%20functions-01.png)\n\n-   Learnt documentation using R oxygen\n\n-   Recreating the Excel functions in R\n\n![](images/functions-01.png)\n\nOur goal for this week was to create a package that has all the required functions.Many functions that we created were inter-related i.e., it required the output of some other function as its input.\n\n### Alex\n\n-   Created functions Estimating the Market size\n\n-   Here is the code for one of the functions in that calculation:\n\n    The function Pct_County is used to calculate the percentage of the county under the proposed store.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPct_County <- function(north_quad,east_quad,south_quad,west_quad, county_size) {\n  sum_val <- sum(Quadrant_Area(north_quad),Quadrant_Area(east_quad),\n                 Quadrant_Area(south_quad),Quadrant_Area(west_quad))\n  return(sum_val / county_size)\n}\n```\n:::\n\n\n### Srika\n\n-   Created functions Estimating the Total Revenue\n\n-   Here is the code for one of the functions in that calculation:\n\n    The function Primary_Shopper_Count estimates the number of primary shopper from the different categories of markets like Metro,rural and towns nearby for the proposed store\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    Primary_Shopper_Count<-function(pct_metro_prim=50,pct_rural_prim=30\n                                    ,pct_town_prim=30,county_pop, towns_pop,\n                                    pct_county,metro_list,town_list){\n      rural_pop<-Rural_Population(county_pop, towns_pop, pct_county)\n      metro_pop<-City_Populations(metro_list)\n      town_pop<-City_Populations(town_list)\n      (metro_pop*(pct_metro_prim/100))+(rural_pop*(pct_rural_prim/100))+\n        (town_pop*(pct_town_prim/100))\n    }\n    ```\n    :::\n\n\n### Aaron\n\n-   Created functions Estimating the Expenses\n\n-   Here is the code for one of the functions in that calculation:\n\n    The function Employee_Wages calculates the dollars spent on employee wages.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    Employee_Wages <- function(Total_Estimated_Revenue) {\n    \n      ifelse(Total_Estimated_Revenue < 500000, stop(\"error: no data for this revenue range\"),\n             percentage <- ifelse(Total_Estimated_Revenue < 999999.99, .0789,\n                                  ifelse(Total_Estimated_Revenue < 2499999.99, .0934,\n                                         ifelse(Total_Estimated_Revenue < 4999999.99, .0751,\n                                                ifelse(Total_Estimated_Revenue < 24999999.99, .0975, .1083)))))\n    \n    \n    \n      Total_Estimated_Revenue * percentage\n    }\n    ```\n    :::\n\n\n# Work in Progress\n\n-   Ideas for optimizing and automation of the functions\n\n# Plan for completion\n\nThis flow chart will help us follow the required throughout the project and map its use.\n\n![](images/tool_process-01.png)\n\nThe following chart shows our plan for the next few week to successfully complete this project! ![](images/project_timeline-01.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}